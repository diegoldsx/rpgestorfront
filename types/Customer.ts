

import { z } from "zod";
import { DocumentTypeEnum } from "./options";

export const CustomerSchema = z.object({
	id: z.string(),
	documentType: DocumentTypeEnum,
	documentNumber: z.number(),
	name: z.string().min(1, "O nome é obrigatório."),
	email: z.string().email("E-mail inválido."),
	cpf: z.string().min(11, "CPF inválido."),
	cnpj: z.string().min(14, "CNPJ inválido."),
	phone: z.string().min(8, "Telefone inválido."),
	mobile: z.string().min(8, "Celular inválido."),
	userPassword: z.string().min(6, "A senha deve ter no mínimo 6 caracteres."),
	registrationDate: z.string().min(1, "A data de registro é obrigatória."),
	status: z.string().min(1, "O status é obrigatório."),
	code: z.string().min(1, "O código é obrigatório."),
	photo: z.string().url("URL da foto inválida."),
	zipCode: z.string().min(8, "CEP inválido."),
	street: z.string().min(1, "A rua é obrigatória."),
	number: z.string().min(1, "O número é obrigatório."),
	complement: z.string().optional(),
	neighborhood: z.string().min(1, "O bairro é obrigatório."),
	state: z.string().min(2, "Estado inválido."),
	city: z.string().min(1, "A cidade é obrigatória."),
	corporateName: z.string().min(1, "A razão social é obrigatória."),
	tradeName: z.string().min(1, "O nome fantasia é obrigatório."),
	billingEmail: z.string().email("E-mail de cobrança inválido."),
	billingName: z.string().min(1, "O nome de cobrança é obrigatório."),
	billingPhone: z.string().min(8, "Telefone de cobrança inválido."),
	billingMobile: z.string().min(8, "Celular de cobrança inválido."),
});

export type CustomerType = z.infer<typeof CustomerSchema>;

export const fakeCustomers: CustomerType[] = [
	{
		id: "1",
		documentType: "pj",
		documentNumber: 12345678000199,
		name: "João Silva",
		email: "joao@empresa.com",
		cpf: "12345678901",
		cnpj: "12345678000199",
		phone: "1132323232",
		mobile: "11999999999",
		userPassword: "Senha@123",
		registrationDate: "2023-05-01",
		status: "active",
		code: "CUST-001",
		photo: "https://example.com/fotos/joao.jpg",
		zipCode: "01310100",
		street: "Av. Paulista",
		number: "1000",
		complement: "Sala 101",
		neighborhood: "Bela Vista",
		state: "SP",
		city: "São Paulo",
		corporateName: "Empresa Joao Silva LTDA",
		tradeName: "João Soluções",
		billingEmail: "financeiro@empresa.com",
		billingName: "Financeiro João",
		billingPhone: "1132323232",
		billingMobile: "11988888888"
	},
	{
		id: "2",
		documentType: "pf",
		documentNumber: 22222222222,
		name: "João Silvo",
		email: "joao@empresa.com",
		cpf: "12345678901",
		cnpj: "12345678000199",
		phone: "1132323232",
		mobile: "11999999999",
		userPassword: "Senha@123",
		registrationDate: "2023-05-01",
		status: "active",
		code: "CUST-001",
		photo: "https://example.com/fotos/joao.jpg",
		zipCode: "01310100",
		street: "Av. Paulista",
		number: "1000",
		complement: "Sala 101",
		neighborhood: "Bela Vista",
		state: "SP",
		city: "São Paulo",
		corporateName: "Empresa Joao Silva LTDA",
		tradeName: "João Soluções",
		billingEmail: "financeiro@empresa.com",
		billingName: "Financeiro João",
		billingPhone: "1132323232",
		billingMobile: "11988888888"
	}
];
